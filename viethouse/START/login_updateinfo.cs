///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace viethouse.START
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The login_updateinfo recording.
    /// </summary>
    [TestModule("73377792-8b4a-450e-9427-60135e15f188", ModuleType.Recording, 1)]
    public partial class login_updateinfo : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::viethouse.viethouseRepository repository.
        /// </summary>
        public static global::viethouse.viethouseRepository repo = global::viethouse.viethouseRepository.Instance;

        static login_updateinfo instance = new login_updateinfo();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public login_updateinfo()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static login_updateinfo Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'https://houseviet.vn/dang-nhap?ReturnUrl=%2Fthanh-vien%2Fthong-tin-ca-nhan' with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("https://houseviet.vn/dang-nhap?ReturnUrl=%2Fthanh-vien%2Fthong-tin-ca-nhan", "Chrome", "", false, false, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ThongTinTaiKhoản.UsernameOrEmailAddress' at 190;12.", repo.ThongTinTaiKhoản.UsernameOrEmailAddressInfo, new RecordItemIndex(1));
            repo.ThongTinTaiKhoản.UsernameOrEmailAddress.Click("190;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'tran' with focus on 'ThongTinTaiKhoản.UsernameOrEmailAddress'.", repo.ThongTinTaiKhoản.UsernameOrEmailAddressInfo, new RecordItemIndex(2));
            repo.ThongTinTaiKhoản.UsernameOrEmailAddress.PressKeys("tran");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'gia' with focus on 'ThongTinTaiKhoản.UsernameOrEmailAddress'.", repo.ThongTinTaiKhoản.UsernameOrEmailAddressInfo, new RecordItemIndex(3));
            repo.ThongTinTaiKhoản.UsernameOrEmailAddress.PressKeys("gia");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Back}{Back}jaluong{LShiftKey down}@{LShiftKey up}gmail.com' with focus on 'ThongTinTaiKhoản.UsernameOrEmailAddress'.", repo.ThongTinTaiKhoản.UsernameOrEmailAddressInfo, new RecordItemIndex(4));
            repo.ThongTinTaiKhoản.UsernameOrEmailAddress.PressKeys("{Back}{Back}jaluong{LShiftKey down}@{LShiftKey up}gmail.com");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ThongTinTaiKhoản.Password' at 183;25.", repo.ThongTinTaiKhoản.PasswordInfo, new RecordItemIndex(5));
            repo.ThongTinTaiKhoản.Password.Click("183;25");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'dev{LShiftKey down}@{LShiftKey up}123' with focus on 'ThongTinTaiKhoản.Password'.", repo.ThongTinTaiKhoản.PasswordInfo, new RecordItemIndex(6));
            repo.ThongTinTaiKhoản.Password.PressKeys("dev{LShiftKey down}@{LShiftKey up}123");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ThongTinTaiKhoản.ĐăngNhập' at 338;26.", repo.ThongTinTaiKhoản.ĐăngNhậpInfo, new RecordItemIndex(7));
            repo.ThongTinTaiKhoản.ĐăngNhập.Click("338;26");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ThongTinTaiKhoản.ATagĐăngTin'.", repo.ThongTinTaiKhoản.ATagĐăngTinInfo, new RecordItemIndex(8));
            Validate.Exists(repo.ThongTinTaiKhoản.ATagĐăngTinInfo);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
