///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace viethouse.MODULE.DangKy.MatKhauTextbox
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The MaHoaMatKhau recording.
    /// </summary>
    [TestModule("79f12f0e-648f-4152-b505-5e1c15ebf2f3", ModuleType.Recording, 1)]
    public partial class MaHoaMatKhau : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::viethouse.viethouseRepository repository.
        /// </summary>
        public static global::viethouse.viethouseRepository repo = global::viethouse.viethouseRepository.Instance;

        static MaHoaMatKhau instance = new MaHoaMatKhau();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public MaHoaMatKhau()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static MaHoaMatKhau Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ThongTinTaiKhoản.ĐăngKy' at 34;17.", repo.ThongTinTaiKhoản.ĐăngKyInfo, new RecordItemIndex(0));
            repo.ThongTinTaiKhoản.ĐăngKy.Click("34;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ThongTinTaiKhoản.RegModalPassword' at 131;27.", repo.ThongTinTaiKhoản.RegModalPasswordInfo, new RecordItemIndex(1));
            repo.ThongTinTaiKhoản.RegModalPassword.Click("131;27");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '1234' with focus on 'ThongTinTaiKhoản.RegModalPassword'.", repo.ThongTinTaiKhoản.RegModalPasswordInfo, new RecordItemIndex(2));
            repo.ThongTinTaiKhoản.RegModalPassword.PressKeys("1234");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='1234') on item 'ThongTinTaiKhoản.RegModalPassword'.", repo.ThongTinTaiKhoản.RegModalPasswordInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.ThongTinTaiKhoản.RegModalPasswordInfo, "Value", "1234");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
